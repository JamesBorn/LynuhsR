devtools::document()
strTrim <- function(str){
gsub("^\\s+|\\s+$", "", str)
}
strTrim("testa")
strTrim("testa     ")
rm(list=ls()
)
clipboard.read()
readClipboard()
clipboard.read <- function(){readClipboard()}
clipboard.read()
li <- list(mtcars)
writeClipboard(li)
clip.write <- function(data, sep = "\t", row.names = FALSE, col.names = TRUE{
if(is.data.frame(data)){
write.table(data, "clipboard", sep=sep, row.names=row.names, col.names=col.names)
}
}
clip.write <- function(data, sep = "\t", row.names = FALSE, col.names = TRUE){
if(is.data.frame(data)){
write.table(data, "clipboard", sep=sep, row.names=row.names, col.names=col.names)
}
}
clip.write(mtcars)
clip.write(mtcars$cyl)
clip.write(mtcars$cyl)
writeClipboard(mtcars$cyl)
clip.write <- function(data, sep = "\t", row.names = FALSE, col.names = TRUE){
if(is.data.frame(data)){
write.table(data, "clipboard", sep=sep, row.names=row.names, col.names=col.names)
} else {
tryCatch({
writeClipboard(data)
}, error = function(err){
stop("argument must be a character vector or a raw vector")
})
}
}
clip.write(mtcars$cyl)
clip.write <- function(data, sep = "\t", row.names = FALSE, col.names = TRUE){
if(is.data.frame(data)){
write.table(data, "clipboard", sep=sep, row.names=row.names, col.names=col.names)
} else {
tryCatch({
writeClipboard(data)
}, error = function(err){
stop("argument musty be a character vector or a raw vector")
})
}
}
clip.write(mtcars$cyl)
clip.write(mtcars)
str(mtcars$cyl)
clip.write <- function(data, sep = "\t", row.names = FALSE, col.names = TRUE){
if(is.data.frame(data)){
write.table(data, "clipboard", sep=sep, row.names=row.names, col.names=col.names)
} else {
tryCatch({
writeClipboard(as.character(data))
}, error = function(err){
stop("argument must be a character vector or a raw vector")
})
}
}
str(mtcars$cyl)
clip.write(mtcars$cyl)
clip.write(list(mtcars))
